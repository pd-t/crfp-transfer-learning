stages:
  - learn

# variables:
#   DOCKER_TLS_CERTDIR: "/certs"
# 
# .build_template:
#   stage: build
#   services:
#     - name: docker:dind
#       command: [ "--tls=false" ]
#   tags:
#     - aime
#   variables:
#     DOCKER_DRIVER: overlay2
#     DOCKER_BUILDKIT: 1
#     DOCKER_TLS_CERTDIR: ""

#build-dvc-interpreter:
#  stage: build
#  extends: .build_template
#  variables:
#    IMAGE_NAME: dvc-interprete
#  before_script:
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#  script:
#    - docker build -t $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHA .
#    - docker push $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHA
#  after_script:
#    - docker rmi $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHA

dvc-repro-and-push:
  image: ludwigai/ludwig-ray-gpu:0.7.4
  stage: learn
  tags:
    - aime
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
  script:
    - ls -al
    - git init
    - pip install -r requirements.txt
    - bash create_minio_credentials.sh
    - bash cml-dvc-repro.sh

